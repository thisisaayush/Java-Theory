    String: It is an object that represents sequence of character.
    
    String class provides a lot of methods to perform operations on string such as compare(), concat(),
    equals(), replace(), length(), etc.
    
    CharSequence Interface: It represents the sequence of characters. String, StringBuffer, StringBuilder classes 
    implements it.
    
    Note: 
    Java String is immutable. It means it cannot be changed. 
    
    There are two ways to create String object in Java:
     i. By string literal It is created using double quote. 
        Example: String obj1 = "Hello";
    ii. By new keyword: In this case, JVM will create a new string object in normal (non-pool) heap memeory.
        Example: String obj2 = new String("Hello");
        
        
    Note: 
    Each time you create a string literal, the JVM checks the "String Constant Pool" first. If the string is already exists in the 
    pool, a reference to the pool instance is returned. If the string doesn't exist in the pool, a new string instance is created and 
    placed in the pool.
    
    Why does Java use the concept of String literal?
    It is because it makes Java more memory efficient, if an object is already in the constant pool, no new object is created.
        
        
        
